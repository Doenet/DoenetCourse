@top Document { misc (Element misc)+ }

entity {
  Text |
  EntityReference |
  CharacterReference |
  Element |
  Comment |
  MismatchedCloseTag |
  incompleteStartCloseTag
}

Element {
  OpenTag entity* CloseTag |
  SelfClosingTag
}

OpenTag[closedBy=CloseTag] {
  StartTag space* TagName space* (Attribute space*)* endTag
}

SelfClosingTag {
  StartTag space* TagName space* (Attribute space*)* selfCloseEndTag
}

CloseTag[openedBy=OpenTag] {
  StartCloseTag space* TagName space* endTag
}

MismatchedCloseTag {
  mismatchedStartCloseTag space* TagName space* endTag
}

Attribute {
  AttributeName |
  AttributeName is AttributeValue
}

misc {
  (Comment | space )*
}

AttributeValue { "\"" (attributeContent | EntityReference | CharacterReference)* "\"" }


Comment { "<!--" commentContent* "-->" }


@context elementContext from "./tokens.js"

@external tokens startTag from "./tokens.js" {
  StartTag[closedBy="SelfCloseEndTag EndTag"]
  StartCloseTag
  mismatchedStartCloseTag[@name=StartCloseTag]
  incompleteStartCloseTag[@name=StartCloseTag]
}

@external tokens commentContent from "./tokens.js" { commentContent }

@tokens {
  endTag { ">" }

  selfCloseEndTag { "/>" }


  nameChar {
    std.asciiLetter | "-" | "_" | std.digit 
  }

  identifier { nameChar+ }

  TagName { identifier }

  AttributeName { identifier }

  attributeContent { !["&]+ }

  is { space* "=" space* }

  EntityReference { "&" ![#; ]+ ";" }

  CharacterReference { "&#" ![; ]+ ";" }

  Text { ![<&]+ }

  space { (" " | "\t" | "\r" | "\n")+ }
}

@detectDelim
